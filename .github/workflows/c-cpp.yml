name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build-alpine:

    timeout-minutes: 15
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        config:
          - {arch: x86_64, branch: latest-stable}
          - {arch: x86, branch: latest-stable}
          - {arch: aarch64, branch: latest-stable}
          - {arch: armhf, branch: latest-stable}
          - {arch: armv7, branch: latest-stable}
          - {arch: ppc64le, branch: latest-stable}
          - {arch: riscv64, branch: edge}
          - {arch: s390x, branch: latest-stable}

    steps:
    - name: Setup Alpine Linux
      uses: jirutka/setup-alpine@v1
      with:
        arch: ${{ matrix.config.arch }}
        branch: ${{ matrix.config.branch }}

    - name: Install dependencies
      shell: alpine.sh --root {0}
      run: |
        apk add git cmake gcc g++ make

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build RandomX
      shell: alpine.sh {0}
      run: |
        mkdir build
        cd build
        cmake ..
        make -j$(nproc)

    - name: Run tests
      shell: alpine.sh {0}
      run: |
        build/randomx-tests

    - uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.config.arch }}.a
        path: build/librandomx.a

  build-windows-msys2:

    timeout-minutes: 15
    runs-on: windows-latest

    strategy:
      matrix:
        config:
          - {c: "gcc", cxx: "g++"}
          - {c: "clang", cxx: "clang++"}

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup MSYS2
      uses: eine/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-clang mingw-w64-x86_64-lld mingw-w64-x86_64-cmake make

    - name: Build RandomX
      run: |
        mkdir build
        cd build
        cmake .. -G "Unix Makefiles" -DCMAKE_C_COMPILER=${{ matrix.config.c }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
        make -j$(nproc)

    - name: Run tests
      run: |
        build/randomx-tests.exe

    - uses: actions/upload-artifact@v4
      with:
        name: windows-x86_64
        path: build

  build-macos:

    timeout-minutes: 5
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake

    - name: Build RandomX
      run: |
        mkdir build
        cd build
        cmake ..
        make -j3

    - name: Run tests
      run: |
        build/randomx-tests

    - uses: actions/upload-artifact@v4
      with:
        name: librandomx-macos
        path: build/librandomx.a